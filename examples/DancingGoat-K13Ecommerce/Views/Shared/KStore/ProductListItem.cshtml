@using DancingGoat.Models

@model ProductListItemViewModel

@{
    var prices = Model.Prices;
    var currency = Model.Prices.Currency;
}

<div class="col-md-6 col-lg-4">
    <article class="product-tile">
        <a href="@Model.ProductDetailUrl">
            <h1 class="product-heading">@Model.ProductName</h1>
            @if (!string.IsNullOrEmpty(Model.PublicStatusName))
            {
                <span class="product-tile-status">
                    @Model.PublicStatusName
                </span>
            }
            <figure class="product-tile-image">
                <img src="@Model.MainImageUrl" alt="@Model.ProductName" title="@Model.ProductName">
                @if (!Model.IsAvailable)
                {
                    <span class="product-tile-stock notavailable"> @HtmlLocalizer["Out of stock"]</span>
                }
            </figure>
            <div class="product-tile-info">
                <span class="product-tile-price">
                    @string.Format(currency.CurrencyFormatString!, prices.Price)
                </span>
                @if (prices.ListPrice > prices.Price)
                {
                    <span class="product-tile-list-price">
                        @string.Format(currency.CurrencyFormatString, prices.ListPrice)
                    </span>
                }
            </div>
        </a>
    </article>
</div>